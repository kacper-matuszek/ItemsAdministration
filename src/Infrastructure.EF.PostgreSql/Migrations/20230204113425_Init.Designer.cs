// <auto-generated />
using System;
using ItemsAdministration.Infrastructure.EF.PostgreSql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ItemsAdministration.Infrastructure.EF.PostgreSql.Migrations
{
    [DbContext(typeof(ItemsAdministrationDbContext))]
    [Migration("20230204113425_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ItemsAdministration.Domain.Models.Color", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createdat");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updatedat");

                    b.Property<long>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint")
                        .HasColumnName("version");

                    b.HasKey("Id")
                        .HasName("pk_colors");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_colors_name");

                    b.ToTable("colors", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("69e93e75-8f18-456c-820c-e6db63bbffba"),
                            CreatedAt = new DateTime(2023, 2, 4, 11, 34, 25, 565, DateTimeKind.Utc).AddTicks(7652),
                            Name = "Czarny",
                            Version = 1L
                        },
                        new
                        {
                            Id = new Guid("9f13d328-75d9-473c-81af-c41111418fed"),
                            CreatedAt = new DateTime(2023, 2, 4, 11, 34, 25, 565, DateTimeKind.Utc).AddTicks(7654),
                            Name = "Czerwony",
                            Version = 1L
                        },
                        new
                        {
                            Id = new Guid("e418be2b-08d4-4ed9-95a0-549e587d933e"),
                            CreatedAt = new DateTime(2023, 2, 4, 11, 34, 25, 565, DateTimeKind.Utc).AddTicks(7655),
                            Name = "Zielony",
                            Version = 1L
                        });
                });

            modelBuilder.Entity("ItemsAdministration.Domain.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Annotations")
                        .HasColumnType("text")
                        .HasColumnName("annotations");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)")
                        .HasColumnName("code");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("color");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createdat");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updatedat");

                    b.Property<long>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint")
                        .HasColumnName("version");

                    b.HasKey("Id")
                        .HasName("pk_items");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("ix_items_code");

                    b.ToTable("items", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
